---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jpgs-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.4.2
        command: ["redis-server", "--appendonly", "yes"]
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegram
  template:
    metadata:
      labels:
        app: telegram
    spec:
      containers:
      - name: telegram
        image: your-registry/telegram:latest
        # If telegram needs to expose a port, uncomment and adjust the following lines:
        # ports:
        # - containerPort: 80
        envFrom:
        - configMapRef:
            name: telegram-env  # Create this ConfigMap from your .env file
        volumeMounts:
        - mountPath: /app/jpgs
          name: jpgs-volume
      volumes:
      - name: jpgs-volume
        persistentVolumeClaim:
          claimName: jpgs-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tunnel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tunnel
  template:
    metadata:
      labels:
        app: tunnel
    spec:
      containers:
      - name: tunnel
        image: your-registry/tunnel:latest
        ports:
        - containerPort: 1089
          hostPort: 1089
        envFrom:
        - configMapRef:
            name: tunnel-env  # Create this ConfigMap from your .env file

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tmdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tmdb
  template:
    metadata:
      labels:
        app: tmdb
    spec:
      containers:
      - name: tmdb
        image: your-registry/tmdb:latest
        # If tmdb needs to expose a port, uncomment and adjust the following lines:
        # ports:
        # - containerPort: 80
        envFrom:
        - configMapRef:
            name: tmdb-env  # Create this ConfigMap from your .env file
        volumeMounts:
        - mountPath: /app/jpgs
          name: jpgs-volume
      volumes:
      - name: jpgs-volume
        persistentVolumeClaim:
          claimName: jpgs-pvc 